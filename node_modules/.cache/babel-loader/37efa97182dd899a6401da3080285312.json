{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from '../Firebase/firebase.init';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, GithubAuthProvider, onAuthStateChanged, signOut } from \"firebase/auth\";\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n  const githubProvider = new GithubAuthProvider();\n\n  const signInUsingGoogle = () => {\n    signInWithPopup(auth, googleProvider).then(result => {\n      console.log(result.user);\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const signInUsingGithub = () => {\n    signInWithPopup(auth, githubProvider).then(result => {\n      setUser(result.user);\n    });\n  };\n\n  const logout = () => {\n    signOut(auth).then(() => {\n      setUser({});\n    });\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      }\n    });\n  }, []);\n  return {\n    user,\n    error,\n    signInUsingGoogle,\n    signInUsingGithub,\n    logout\n  };\n};\n\n_s(useFirebase, \"iIn/869R6T2MNTr+7gKkePKLFYg=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/home/yuko-2/Desktop/Jhankar projects/react-auth-integration-module-58/src/hooks/useFirebase.js"],"names":["useEffect","useState","initializeAuthentication","getAuth","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","onAuthStateChanged","signOut","useFirebase","user","setUser","error","setError","auth","googleProvider","githubProvider","signInUsingGoogle","then","result","console","log","catch","message","signInUsingGithub","logout"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,wBAAP,MAAqC,2BAArC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,kBAAvD,EAA2EC,kBAA3E,EAA+FC,OAA/F,QAA8G,eAA9G;AAGAN,wBAAwB;;AAExB,MAAMO,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMa,IAAI,GAAGX,OAAO,EAApB;AACA,QAAMY,cAAc,GAAG,IAAIV,kBAAJ,EAAvB;AACA,QAAMW,cAAc,GAAG,IAAIV,kBAAJ,EAAvB;;AAEA,QAAMW,iBAAiB,GAAG,MAAM;AAC5Bb,IAAAA,eAAe,CAACU,IAAD,EAAOC,cAAP,CAAf,CACKG,IADL,CACUC,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACT,IAAnB;AACAC,MAAAA,OAAO,CAACQ,MAAM,CAACT,IAAR,CAAP;AACH,KAJL,EAKKY,KALL,CAKWV,KAAK,IAAI;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR;AACH,KAPL;AAQH,GATD;;AAWA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BpB,IAAAA,eAAe,CAACU,IAAD,EAAOE,cAAP,CAAf,CACKE,IADL,CACUC,MAAM,IAAI;AACZR,MAAAA,OAAO,CAACQ,MAAM,CAACT,IAAR,CAAP;AACH,KAHL;AAIH,GALD;;AAOA,QAAMe,MAAM,GAAG,MAAM;AACjBjB,IAAAA,OAAO,CAACM,IAAD,CAAP,CACKI,IADL,CACU,MAAM;AACRP,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAHL;AAIH,GALD;;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,kBAAkB,CAACO,IAAD,EAAOJ,IAAI,IAAI;AAC7B,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ,KAJiB,CAAlB;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,SAAO;AACHA,IAAAA,IADG;AAEHE,IAAAA,KAFG;AAGHK,IAAAA,iBAHG;AAIHO,IAAAA,iBAJG;AAKHC,IAAAA;AALG,GAAP;AAOH,CAhDD;;GAAMhB,W;;AAkDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport initializeAuthentication from '../Firebase/firebase.init';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, GithubAuthProvider, onAuthStateChanged, signOut } from \"firebase/auth\";\n\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n    const [user, setUser] = useState({});\n    const [error, setError] = useState('');\n\n    const auth = getAuth()\n    const googleProvider = new GoogleAuthProvider();\n    const githubProvider = new GithubAuthProvider();\n\n    const signInUsingGoogle = () => {\n        signInWithPopup(auth, googleProvider)\n            .then(result => {\n                console.log(result.user);\n                setUser(result.user);\n            })\n            .catch(error => {\n                setError(error.message);\n            })\n    }\n\n    const signInUsingGithub = () => {\n        signInWithPopup(auth, githubProvider)\n            .then(result => {\n                setUser(result.user);\n            })\n    }\n\n    const logout = () => {\n        signOut(auth)\n            .then(() => {\n                setUser({});\n            })\n    }\n\n    useEffect(() => {\n        onAuthStateChanged(auth, user => {\n            if (user) {\n                setUser(user);\n            }\n        })\n    }, []);\n\n    return {\n        user,\n        error,\n        signInUsingGoogle,\n        signInUsingGithub,\n        logout\n    }\n}\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}